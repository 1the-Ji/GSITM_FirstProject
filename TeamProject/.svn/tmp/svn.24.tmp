package com.gsitm.dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import com.gsitm.common.ConstString;
import com.gsitm.dto.SnackDTO;


/**
 *
 * @프로그램   : EmployeesDAO.java
 * @작성일     : 2017. 5. 2.
 * @작성자     : 지승훈
 * @기능       : 회의실/교육식의 간식 정보 관련 DAO
 * @버전       : 1.0
 *
 */

public class SnackDAO {
	public static Connection getConnection() {
	      Connection conn = null;
	      try {
	    	  Class.forName(ConstString.JDBC_DRIVER);
		      conn = DriverManager.getConnection(ConstString.DB_SERVER, ConstString.DB_USER, ConstString.DB_PASSWD);
	      } catch (Exception e) {
	         e.printStackTrace();
	      }
	      return conn;
	   }

	/**
	 *
	 * @작성일      : 2017. 5. 2.
	 * @작성자      : 지승훈
	 * @기능    	: 회의실/예약실 예약에 필요한 간식 및 비품 등록 메소드
	 * @메소드명    : insert
	 * @param roomDTO
	 */
	public void insert(SnackDTO snackDTO,String roomId){
		Connection con = getConnection();
		PreparedStatement pstmt = null;
		String sql = "select room_seq.currval from dual"; //sql문 작성
		String snackSql = "insert into snack(snack_id,snack_name,pay,room_id)"
						  + " values(snack_seq.NEXTVAL,?,?,?)";
		//String roomId = null;
		   try {
			  /* pstmt = con.prepareStatement(sql);
			   ResultSet rs = pstmt.executeQuery();
				while(rs.next()){
					roomId = rs.getString("room_seq.currval");
				}*/
				//SNACK테이블에 데이터 삽입
				pstmt = con.prepareStatement(snackSql);
				pstmt.setString(1, snackDTO.getSnackName());
				pstmt.setInt(2, snackDTO.getPay());
				pstmt.setString(3, roomId);
				int result = pstmt.executeUpdate();
				System.out.println("snack 삽입 성공");
		      } catch (SQLException e) {
		         e.printStackTrace();
		      } finally {
		    	  SnackDAO.close(con, pstmt);;
		      }
	}

	/**
	 *
	 * @작성일      : 2017. 5. 2.
	 * @작성자      : 지승훈
	 * @기능    	: 회의실/예약실 예약에 필요한 간식 및 비품 삭제 메소드
	 * @메소드명    : update
	 * @param roomDTO
	 */
	public void delete(int num){
		Connection con = getConnection();
		PreparedStatement pstmt = null;
		String sql = null; //sql문 작성
		   try {
			   pstmt = con.prepareStatement(sql);

			   pstmt.executeUpdate();
		      } catch (SQLException e) {
		         e.printStackTrace();
		      } finally {
		    	  SnackDAO.close(con, pstmt);;
		      }
	}

	/**
	 *
	 * @작성일      : 2017. 5. 2.
	 * @작성자      : 지승훈
	 * @기능    	:
	 * @메소드명    : close
	 * @param con
	 * @param pstmt
	 */
	private static void close(Connection con, PreparedStatement pstmt) {
		 try {
			 pstmt.close();
			 con.close();
	      } catch (Exception e) {
	         e.printStackTrace();
	      }
	}
}
