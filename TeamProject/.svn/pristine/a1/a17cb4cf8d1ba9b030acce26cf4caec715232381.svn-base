package com.gsitm.dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import com.gsitm.common.ConstString;
import com.gsitm.dto.ReservationDTO;
/**
 *
 * @프로그램   : EmployeesDAO.java
 * @작성일     : 2017. 5. 2.
 * @작성자     : 지승훈
 * @기능       : 회의실/예약실 사용후 결제를 하기위한 부서 관련 DAO
 * @버전       : 1.0
 *
 */

public class ReservationDAO {
	public static Connection getConnection() {
	      Connection conn = null;
	      try {
	    	  Class.forName(ConstString.JDBC_DRIVER);
		      conn = DriverManager.getConnection(ConstString.DB_SERVER, ConstString.DB_USER, ConstString.DB_PASSWD);
	      } catch (Exception e) {
	         e.printStackTrace();
	      }
	      return conn;
	   }

	/**
	 *
	 * @작성일      : 2017. 5. 2.
	 * @작성자      : 지승훈
	 * @기능    	: 회의실/교육실 예약 등록 메소드
	 * @메소드명    : insert
	 * @param reservationDTO
	 */
	static int testCnt = 2; //테스트 id값
	public void insert(ReservationDTO reservationDTO){
		Connection con = getConnection();
		PreparedStatement pstmt = null;
		String sql = "INSERT INTO reservation " 
				+ "(REG_IN_ID, EMP_ID, ROOM_ID, START_DATE, FINISH_DATE, FEE, USE_COUNT, USE_DEP_ID, APPRO_DATE, REG_STATE, USE_STATE, USE_PURPOSE) " 
				+ "VALUES (?, 0, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
				//SEQ.NEXTVAL
		   try {
			   int pIdx = 0;
			   pstmt = con.prepareStatement(sql);
			   
			   pstmt.setInt(++pIdx, testCnt++); //테스트 id 값
			   pstmt.setString(++pIdx, reservationDTO.getRoomId());
			   pstmt.setDate(++pIdx, new java.sql.Date(reservationDTO.getStartDate().getTime()));
			   pstmt.setDate(++pIdx, new java.sql.Date(reservationDTO.getFinishDate().getTime()));
			   pstmt.setInt(++pIdx, reservationDTO.getFee());
			   pstmt.setInt(++pIdx, reservationDTO.getUseCount());
			   pstmt.setInt(++pIdx, reservationDTO.getUseDepId());
			   pstmt.setDate(++pIdx, new java.sql.Date(reservationDTO.getApproDate().getTime()));
			   pstmt.setString(++pIdx, reservationDTO.getRegState());
			   pstmt.setString(++pIdx, reservationDTO.getUseState());
			   pstmt.setString(++pIdx, reservationDTO.getUsePurpose());
			   
			   pstmt.executeUpdate();
			   
			   System.out.println("업데이트 성공");
		      } catch (SQLException e) {
		         throw new RuntimeException(e);
		      } finally {
		    	  ReservationDAO.close(con, pstmt);
		      }
	}

	public void update(ReservationDTO reservationDTOm, int num){
		Connection con = getConnection();
		PreparedStatement pstmt = null;
		String sql = null; //sql문 작성
		   try {
			   pstmt = con.prepareStatement(sql);

			   pstmt.executeUpdate();
		      } catch (SQLException e) {
		         e.printStackTrace();
		      } finally {
		    	  ReservationDAO.close(con, pstmt);;
		      }
	}



	/**
	 *
	 * @작성일      : 2017. 5. 2.
	 * @작성자      : 지승훈
	 * @기능    	:
	 * @메소드명    : close
	 * @param con
	 * @param pstmt
	 */
	private static void close(Connection con, PreparedStatement pstmt) {
		 try {
			 pstmt.close();
			 con.close();
	      } catch (Exception e) {
	         e.printStackTrace();
	      }
	}
}
